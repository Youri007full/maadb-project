version: "3.7"

networks:
  mongo-net:
  postgres-net:

services:

  postgres:
    image: postgres
    networks:
      - postgres-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    deploy:
      restart_policy:
        delay: 0s
        max_attempts: 10
        window: 5s
      placement:
        constraints:
          - node.labels.type==rpi2
    environment:
      - POSTGRES_PASSWORD=postgres

  sql-analytics-server:
    image: lamba92/maadb-project-sql-analytics-server
    networks:
      - postgres-net
    depends_on:
      - postgres
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 15s
      placement:
        constraints:
          - node.labels.type==rpi4
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
    ports:
      - 8083:80

  nosql-analytics-server:
    image: lamba92/maadb-project-nosql-analytics-server
    networks:
      - mongo-net
    depends_on:
      - supervisor
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 15s
      placement:
        constraints:
          - node.labels.type==rpi4
    environment:
      - MONGO_URL=mongodb://supervisor:27017
      - MONGO_DB_NAME=maadb
    ports:
      - 8084:80

  supervisor:
    image: lamba92/maadb-project-supervisor
    networks:
      - mongo-net
      - postgres-net
    depends_on:
      - postgres
      - mongo-cfg-1
      - mongo-cfg-2
      - ms1
      - ms2
      - ms3
      - ms4
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 15s
    environment:
      - MONGO_CONFIGS=mongo-cfg-1:27019,mongo-cfg-2:27019
      - MONGO_SHARDS=ms1:27018,ms2:27018,ms3:27018,ms4:27018
      - MONGO_CONFIGS_RPL_NAME=cfgrs
      - MONGO_SHARDS_RPL_NAME=datars
      - MONGO_DB_NAME=maadb
      - RELATIONAL_DB_URL=jdbc:postgresql://postgres:5432/
      - RELATIONAL_DB_USER=postgres
      - RELATIONAL_DB_PASSWORD=postgres
    ports:
      - 27017:27017

  mongo-cfg-1:
    image: mongo
    command: mongod --configsvr --bind_ip_all --replSet cfgrs
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--port", "27019", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s
      placement:
        constraints:
          - node.labels.mongo.role==data1

  mongo-cfg-2:
    image: mongo
    command: mongod --configsvr --bind_ip_all --replSet cfgrs
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--port", "27019", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s
      placement:
        constraints:
          - node.labels.mongo.role==data2

  ms1:
    image: mongo
    command: mongod --shardsvr --bind_ip_all --replSet datars
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--port", "27018", "--eval", "db.stats()"]
    deploy:
      placement:
        constraints:
          - node.labels.mongo.role==data1
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s

  ms2:
    image: mongo
    command: mongod --shardsvr --bind_ip_all --replSet datars
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--port", "27018", "--eval", "db.stats()"]
    deploy:
      placement:
        constraints:
          - node.labels.mongo.role==data2
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s

  ms3:
    image: mongo
    command: mongod --shardsvr --bind_ip_all --replSet datars
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--port", "27018", "--eval", "db.stats()"]
    deploy:
      placement:
        constraints:
          - node.labels.mongo.role==data1
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s

  ms4:
    image: mongo
    command: mongod --shardsvr --bind_ip_all --replSet datars
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--port", "27018", "--eval", "db.stats()"]
    deploy:
      placement:
        constraints:
          - node.labels.mongo.role==data2
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s

  api-gateway:
    image: nginx
    command: ["nginx-debug", "-g", "daemon off;"]
    deploy:
      placement:
        constraints:
          - node.labels.type==rpi2
    depends_on:
      - sql-analytics-server
      - nosql-analytics-server
    networks:
      - mongo-net
      - postgres-net
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx.log:/nginx.log:rw
    ports:
      - 80:80
