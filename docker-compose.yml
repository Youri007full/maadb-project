version: "3.7"

networks:
  mongo-net:
  postgres-net:

services:

  jupyter-kotlin:
    image: lamba92/kotlin-jupyter:1.0.1
    ports:
      - 8888:8888
    volumes:
      - type: bind
        source: ~/notebooks
        target: /notebooks
    networks:
      - mongo-net
      - postgres-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s

  postgres:
    image: postgres
    deploy:
      restart_policy:
        delay: 0s
        max_attempts: 10
        window: 5s
      placement:
        constraints:
          - node.role==manager
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432

  sql-analitycs-server:
    image: lamba92/maadb-project-sql-analytics-server
    networks:
      - postgres-net
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 15s
      mode: global

    environment:
      - DATABASE_URL="jdbc:postgres//postgres:5432"
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
    ports:
      - 8080:80

  mongo-supervisor:
    image: lamba92/maadb-project-mongo-supervisor
    networks:
      - mongo-net
    depends_on:
      - mongo-cfg-1
      - mongo-cfg-2
      - mongo-shard-1
      - mongo-shard-2
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 15s
    environment:
      - CONFIGS=mongo-cfg-1:27019,mongo-cfg-2:27019
      - SHARDS=mongo-shard-1:27018,mongo-shard-2:27018
      - CONFIGS_RPL_NAME=cfgrs
      - SHARDS_RPL_NAME=datars
    ports:
      - 27017:27017

  mongo-cfg-1:
    image: mongo
    command: mongod --configsvr --replSet cfgrs
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s

  mongo-cfg-2:
    image: mongo
    command: mongod --configsvr --replSet cfgrs
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s
      placement:
        constraints:
          - node.labels.mongo.role==data2

  mongo-shard-1:
    image: mongo
    command: mongod --shardsvr --replSet datars
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s
      placement:
        constraints:
          - node.labels.mongo.role==data1

  mongo-shard-2:
    image: mongo
    command: mongod --shardsvr  --replSet datars
    networks:
      - mongo-net
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats()"]
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s
      placement:
        constraints:
          - node.labels.mongo.role==data2

  mongo-express:
    image: mongo-express
    networks:
      - mongo-net
    deploy:
      restart_policy:
        delay: 5s
        max_attempts: 5
        window: 10s
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongo-supervisor
